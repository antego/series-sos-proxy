#
# This docker compose file starts two containers
#   - Tomcat with proxy webapp
#   - PostgresDB for proxy metadata
#
# Run docker-compose up from ./proxy-docker directory
# Navigate to the http://localhost:8080/proxy-webapp/api/ to check started SOS Proxy
#
version: '3'
services:
  # Proxy
  proxy-db:
    image: mdillon/postgis:9.5
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sos
  sos-proxy:
    # change to 7- or 9- to change the tomcat version
    image: tomcat:8-jre8-alpine
    ports:
      - 8080:8080
      - 8000
    links:
      - proxy-db:postgres
    volumes:
      - "../proxy-webapp/target/proxy-webapp:/usr/local/tomcat/webapps/proxy-webapp:ro"
      - "./config-data-sources.json:/usr/local/tomcat/webapps/proxy-webapp/WEB-INF/classes/config-data-sources.json:ro"
      - "./application.properties:/usr/local/tomcat/webapps/proxy-webapp/WEB-INF/classes/application.properties:ro"
    environment:
      - JPDA_ADDRESS=8000
      - JPDA_TRANSPORT=dt_socket
    command: ["catalina.sh", "jpda", "run"]
